local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "üî∞ Example Script Hub | Game üî∞",
   LoadingTitle = "üî∞ Kzu hub [Premium] üî∞",
   LoadingSubtitle = "by Kzu123",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Example Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Key | Youtube Hub",
      Subtitle = "Key System",
      Note = "Key In Discord Server",
      FileName = "YoutubeHubKey1", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Kzu123"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("üè†MAIN", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "You executed the script",
   Content = "Like And Subcribe !",
   Duration = 5,
   Image = 13047715178,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button = MainTab:CreateButton({
   Name = "Infinite Jump Toggle",
   Callback = function()
       --Toggles the infinite jump between on or off on every script run
_G.infinjump = not _G.infinjump

if _G.infinJumpStarted == nil then
	--Ensures this only runs once to save resources
	_G.infinJumpStarted = true
	
	--Notifies readiness
	game.StarterGui:SetCore("SendNotification", {Title="Youtube Hub"; Text="Infinite Jump Activated!"; Duration=5;})

	--The actual infinite jump
	local plr = game:GetService('Players').LocalPlayer
	local m = plr:GetMouse()
	m.KeyDown:connect(function(k)
		if _G.infinjump then
			if k:byte() == 32 then
			humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
			humanoid:ChangeState('Jumping')
			wait()
			humanoid:ChangeState('Seated')
			end
		end
	end)
end
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "WalkSpeed Slider",
   Range = {1, 350},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "sliderws", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "JumpPower Slider",
   Range = {1, 350},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "sliderjp", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
   end,
})

local Dropdown = MainTab:CreateDropdown({
   Name = "Select Area",
   Options = {"Starter World","Pirate Island","Pineapple Paradise"},
   CurrentOption = {"Starter World"},
   MultipleOptions = false,
   Flag = "dropdownarea", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Option)
        print(Option)
   end,
})

local Input = MainTab:CreateInput({
   Name = "Walkspeed",
   PlaceholderText = "1-500",
   RemoveTextAfterFocusLost = true,
   Callback = function(Text)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Text)
   end,
})

local OtherSection = MainTab:CreateSection("Other")

local Toggle = MainTab:CreateToggle({
   Name = "Auto Farm",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        print("FARMING")
   end,
})

local TPTab = Window:CreateTab("üèù Teleports", nil) -- Title, Image

local Button1 = TPTab:CreateButton({
   Name = "Starter Island",
   Callback = function()
        --Teleport1
   end,
})

local Button2 = TPTab:CreateButton({
   Name = "Pirate Island",
   Callback = function()
        --Teleport2
   end,
})

local Button3 = TPTab:CreateButton({
   Name = "Pineapple Paradise",
   Callback = function()
        --Teleport3
   end,
})




local espEnabled = false -- Tr·∫°ng th√°i b·∫≠t/t·∫Øt ESP
local connections = {} -- L∆∞u c√°c k·∫øt n·ªëi ƒë·ªÉ ng·∫Øt khi c·∫ßn

local function createESP(player)
    if player == game.Players.LocalPlayer then return end -- Kh√¥ng hi·ªÉn th·ªã b·∫£n th√¢n

    local function updateESP()
        local character = player.Character
        if not character or not character:FindFirstChild("HumanoidRootPart") then return end

        local billboard = Instance.new("BillboardGui")
        billboard.Adornee = character.HumanoidRootPart
        billboard.Size = UDim2.new(0, 200, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true

        local textLabel = Instance.new("TextLabel", billboard)
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = Color3.new(0, 255, 0) -- M√†u xanh l√°
        textLabel.TextScaled = false
        textLabel.TextSize = 20
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.TextStrokeTransparency = 0.2
        billboard.Parent = character.HumanoidRootPart

        -- C·∫≠p nh·∫≠t v·ªã tr√≠ & gi·ªØ nguy√™n k√≠ch th∆∞·ªõc theo kho·∫£ng c√°ch
        spawn(function()
            while espEnabled and character and character:FindFirstChild("Humanoid") and character:FindFirstChild("HumanoidRootPart") do
                local humanoid = character:FindFirstChild("Humanoid")
                local localPlayer = game.Players.LocalPlayer
                if localPlayer and localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local distance = (localPlayer.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
                    local size = 15
                    billboard.Size = UDim2.new(0, size * 10, 0, size * 2)
                    textLabel.Text = string.format("[%s] HP: %d | %dm", player.Name, math.floor(humanoid.Health), math.floor(distance))
                end
                wait(0.1)
            end
            billboard:Destroy()
        end)
    end

    -- G√°n ESP khi nh√¢n v·∫≠t m·ªõi spawn
    if not connections[player] then
        connections[player] = player.CharacterAdded:Connect(function()
            if espEnabled then
                wait(1) -- ƒê·ª£i nh√¢n v·∫≠t load xong
                updateESP()
            end
        end)
    end

    -- N·∫øu nh√¢n v·∫≠t ƒë√£ t·ªìn t·∫°i, t·∫°o ESP lu√¥n
    if player.Character then
        updateESP()
    end
end

-- H√†m b·∫≠t/t·∫Øt ESP
local function toggleESP(Value)
    espEnabled = Value -- Tr·∫°ng th√°i toggle s·∫Ω quy·∫øt ƒë·ªãnh b·∫≠t/t·∫Øt ESP

    if espEnabled then
        -- Th√™m ESP cho t·∫•t c·∫£ ng∆∞·ªùi ch∆°i hi·ªán t·∫°i
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                createESP(player)
            end
        end

        -- L·∫Øng nghe ng∆∞·ªùi ch∆°i m·ªõi tham gia
        connections["PlayerAdded"] = game.Players.PlayerAdded:Connect(function(player)
            if espEnabled then createESP(player) end
        end)
    else
        -- X√≥a to√†n b·ªô ESP khi t·∫Øt
        for _, player in pairs(game.Players:GetPlayers()) do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                for _, gui in pairs(player.Character.HumanoidRootPart:GetChildren()) do
                    if gui:IsA("BillboardGui") then gui:Destroy() end
                end
            end
        end

        -- Ng·∫Øt t·∫•t c·∫£ k·∫øt n·ªëi
        for _, conn in pairs(connections) do
            if conn and typeof(conn) == "RBXScriptConnection" then
                conn:Disconnect()
            end
        end
        connections = {}
    end
end

-- T·∫°o Tab v√† Toggle ƒë·ªÉ b·∫≠t/t·∫Øt ESP
local ESP_Tab = Window:CreateTab("üî•ESP", nil)  -- T·∫°o Tab 
local Toggle = ESP_Tab:CreateToggle({
   Name = "ESP PLAYER",
   CurrentValue = false,
   Flag = "ESP_Toggle",  -- C·ªù l∆∞u tr·ªØ tr·∫°ng th√°i toggle
   Callback = function(Value)
        toggleESP(Value)  -- G·ªçi h√†m b·∫≠t/t·∫Øt ESP khi toggle thay ƒë·ªïi
   end,
})






local espFruitEnabled = false
local fruitLabelVI = nil
local fruitLabelEN = nil

-- H√†m ph√°t hi·ªán ng√¥n ng·ªØ c·ªßa game
local function getGameLanguage()
    local locale = game.LocalizationService.RobloxLocaleId
    if locale:find("en") then
        return "en" -- Ti·∫øng Anh
    else
        return "vi" -- Ti·∫øng Vi·ªát (m·∫∑c ƒë·ªãnh)
    end
end

-- H√†m t√¨m tr√°i c√¢y trong nhi·ªÅu th∆∞ m·ª•c kh√°c nhau
local function findClosestFruit()
    local localPlayer = game.Players.LocalPlayer
    if not localPlayer or not localPlayer.Character or not localPlayer.Character:FindFirstChild("HumanoidRootPart") then return nil, math.huge end

    local closestFruit = nil
    local closestDistance = math.huge
    local humanoidRootPart = localPlayer.Character.HumanoidRootPart

    local function checkFolder(folder)
        for _, fruit in pairs(folder:GetChildren()) do
            if (fruit:IsA("Tool") or fruit:IsA("Model") or fruit:IsA("Part")) and fruit:FindFirstChild("Handle") then
                local distance = (humanoidRootPart.Position - fruit.Handle.Position).Magnitude
                if distance < closestDistance then
                    closestFruit = fruit
                    closestDistance = distance
                end
            end
        end
    end

    -- Ki·ªÉm tra trong c√°c th∆∞ m·ª•c c√≥ th·ªÉ ch·ª©a tr√°i c√¢y
    checkFolder(game.Workspace)
    if game.Workspace:FindFirstChild("Fruits") then
        checkFolder(game.Workspace.Fruits)
    end
    if game.ReplicatedStorage:FindFirstChild("Fruits") then
        checkFolder(game.ReplicatedStorage.Fruits)
    end

    return closestFruit, closestDistance
end

-- C·∫≠p nh·∫≠t UI hi·ªÉn th·ªã kho·∫£ng c√°ch ƒë·∫øn tr√°i c√¢y g·∫ßn nh·∫•t
local function updateFruitESP()
    if not espFruitEnabled then return end

    local closestFruit, closestDistance = findClosestFruit()

    -- X√°c ƒë·ªãnh ng√¥n ng·ªØ hi·ªÉn th·ªã
    local lang = getGameLanguage()

    if closestFruit then
        if lang == "vi" and fruitLabelVI then
            fruitLabelVI.Text = string.format("ƒê√£ ph√°t hi·ªán tr√°i c√¢y: C√°ch ƒë√¢y %dm", math.floor(closestDistance))
            fruitLabelEN.Text = ""
        elseif lang == "en" and fruitLabelEN then
            fruitLabelEN.Text = string.format("FRUIT DETECTED: %dm away.", math.floor(closestDistance))
            fruitLabelVI.Text = ""
        end
    else
        if fruitLabelVI then fruitLabelVI.Text = "" end
        if fruitLabelEN then fruitLabelEN.Text = "" end
    end
end

-- H√†m b·∫≠t/t·∫Øt ESP tr√°i c√¢y
local function toggleFruitESP(Value)
    espFruitEnabled = Value

    if espFruitEnabled then
        if not fruitLabelVI or not fruitLabelEN then
            local gui = Instance.new("ScreenGui")
            gui.Parent = game.Players.LocalPlayer:FindFirstChildOfClass("PlayerGui") or game.CoreGui

            -- Ti·∫øng Vi·ªát
            fruitLabelVI = Instance.new("TextLabel")
            fruitLabelVI.Size = UDim2.new(0, 500, 0, 50)
            fruitLabelVI.Position = UDim2.new(0.5, -250, 0.56, 0)
            fruitLabelVI.BackgroundTransparency = 1
            fruitLabelVI.TextColor3 = Color3.new(1, 1, 1)
            fruitLabelVI.TextStrokeTransparency = 0
            fruitLabelVI.TextStrokeColor3 = Color3.new(0, 0, 0)
            fruitLabelVI.TextSize = 30
            fruitLabelVI.Font = Enum.Font.SourceSansBold
            fruitLabelVI.Text = ""
            fruitLabelVI.Parent = gui

            -- Ti·∫øng Anh
            fruitLabelEN = Instance.new("TextLabel")
            fruitLabelEN.Size = UDim2.new(0, 500, 0, 50)
            fruitLabelEN.Position = UDim2.new(0.5, -250, 0.56, 0)
            fruitLabelEN.BackgroundTransparency = 1
            fruitLabelEN.TextColor3 = Color3.new(1, 1, 1)
            fruitLabelEN.TextStrokeTransparency = 0
            fruitLabelEN.TextStrokeColor3 = Color3.new(0, 0, 0)
            fruitLabelEN.TextSize = 30
            fruitLabelEN.Font = Enum.Font.SourceSansBold
            fruitLabelEN.Text = ""
            fruitLabelEN.Parent = gui
        end

        spawn(function()
            while espFruitEnabled do
                updateFruitESP()
                wait(0.5)
            end
            if fruitLabelVI then fruitLabelVI.Text = "" end
            if fruitLabelEN then fruitLabelEN.Text = "" end
        end)
    else
        if fruitLabelVI then fruitLabelVI.Text = "" end
        if fruitLabelEN then fruitLabelEN.Text = "" end
    end
end

-- S·ª≠ d·ª•ng CreateToggle ƒë·ªÉ thay th·∫ø n√∫t
local Toggle = ESP_Tab:CreateToggle({
    Name = "FRUIT NOTIFIER",
    CurrentValue = false,
    Flag = "FruitToggle", -- Flag ƒë·ªÉ l∆∞u tr·∫°ng th√°i b·∫≠t/t·∫Øt
    Callback = function(Value)
        toggleFruitESP(Value)  -- G·ªçi h√†m b·∫≠t/t·∫Øt ESP tr√°i c√¢y v·ªõi gi√° tr·ªã c·ªßa Toggle
    end,
})




local TPTab = Window:CreateTab("üé≤ Misc", nil) -- Title, Image
   


       
